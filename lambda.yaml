esphome:
  name: attchd_garage_sensor
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: "ssid"
  password: "pwd"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Attached Garage Sensor"
    password: "RzAj5HbkTLZJ"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

mqtt:
  broker: x.x.x.x
  username: uid
  password: pwd

binary_sensor:
  - platform: status
    name: "Attached Garage Sensor Status"
    
  - platform: template
    name: "someone's Car"
    device_class: presence
    lambda: |-
      if ((id(car_sensor).state < 1.1)){
         // vehichle is in the garage
         return true;
      } else {
         // no vehicle
         return false;
      }

text_sensor:
  - platform: homeassistant
    entity_id: cover.attached_garage
    id: status_attached_garage

sensor:
  - platform: wifi_signal
    name: "Attached Garage Sensor WiFi Signal"
    update_interval: 60s

  - platform: dht
    pin: D7
    temperature:
      name: "Attached Garage Sensor Temperature"
    humidity:
      name: "Attached Garage Sensor Humidity"
    update_interval: 60s
    model: DHT22

  - platform: ultrasonic
    trigger_pin: D1
    echo_pin: D2
    update_interval: 1s
    name: "Attached Garage Car Sensor"
    id: car_sensor
    filters:
      filter_out: nan
    timeout: 4.0m
    
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(status_attached_garage).state == "open";'
            then:
              -  lambda: |-
                   if ((id(car_sensor).state >= 1.0)) {
                     id(parkingled).turn_off();
                   }
                   else if ((id(car_sensor).state >= 0.7) & (id(car_sensor).state < 1.0)) {
                     auto call = id(parkingled).turn_on();
                     call.set_rgb(0,1.0,0);
                     call.perform();
                   }
                   else if ((id(car_sensor).state >= 0.5) & (id(car_sensor).state < 0.7)) {
                     auto call = id(parkingled).turn_on();
                     call.set_rgb(1.0,0.75,0);
                     call.perform();
                   }
                   else if ((id(car_sensor).state >= 0.3) & (id(car_sensor).state < 0.5)) {
                     auto call = id(parkingled).turn_on();
                     call.set_rgb(0,0,1.0);
                     call.perform();
                   }
                   else if ((id(car_sensor).state < 0.1)) {
                     auto call = id(parkingled).turn_on();
                     call.set_rgb(1.0,0,0);
                     call.perform();
                   }

light:
  - platform: fastled_clockless
    chipset: WS2812B
    pin: GPIO12
    num_leds: 21
    rgb_order: GRB
    name: "Attached Garage Parking LED"
    restore_mode: ALWAYS_OFF
    default_transition_length: 0s
    id: parkingled
    effects:
      - strobe:
      - strobe:
          name: Red Strobe
          colors:
            - state: True
              brightness: 100%
              red: 100%
              green: 0%
              blue: 0%
              duration: 100ms
            - state: False
              duration: 100ms
